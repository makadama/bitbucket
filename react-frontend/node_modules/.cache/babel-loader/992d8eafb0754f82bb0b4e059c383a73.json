{"ast":null,"code":"var _jsxFileName = \"D:\\\\tests\\\\react-frontend\\\\src\\\\components\\\\dashboardcomponent\\\\AgeBarChart.js\";\nimport React, { Component } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { connect } from \"react-redux\";\nimport { fetchInfos } from '../../actions/uscensuslearnActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AgeBarChart extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.fetchInfos();\n  }\n\n  render() {\n    const {\n      infos\n    } = this.props.infos;\n    var malesTotalAge = 0;\n    var femalesTotalAge = 0;\n    var maleCount = 0;\n    var femaleCount = 0;\n    var maleMean = 0;\n    var femaleMean = 0;\n\n    for (var i = 0; i < infos.length; i++) {\n      if (infos[i].sex === \"Male\") {\n        malesTotalAge += infos[i].age;\n        maleCount += 1;\n      } else if (infos[i].sex === \"Female\") {\n        femalesTotalAge += infos[i].age;\n        femaleCount += 1;\n      } else {\n        console.log('not include');\n      }\n    }\n\n    maleMean = malesTotalAge / maleCount;\n    femaleMean = femalesTotalAge / femaleCount;\n    var sexData = [['Sex', 'Mean Age'], ['Female', femaleMean], ['Male', maleMean]];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            height: '100px',\n            chartType: \"BarChart\",\n            loader: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this),\n            data: sexData,\n            options: {\n              title: 'NEO Data vizualisation',\n              chartArea: {\n                width: '50%'\n              },\n              hAxis: {\n                title: 'Estimated diameter(km)',\n                minValue: 0\n              },\n              vAxis: {\n                title: 'Neo Name'\n              }\n            } // For tests\n            ,\n            rootProps: {\n              'data-testid': '2'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  infos: state.infos\n});\n\nexport default connect(mapStateToProps, {\n  fetchInfos\n})(AgeBarChart);","map":{"version":3,"sources":["D:/tests/react-frontend/src/components/dashboardcomponent/AgeBarChart.js"],"names":["React","Component","Chart","connect","fetchInfos","AgeBarChart","constructor","state","componentDidMount","props","render","infos","malesTotalAge","femalesTotalAge","maleCount","femaleCount","maleMean","femaleMean","i","length","sex","age","console","log","sexData","title","chartArea","width","hAxis","minValue","vAxis","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchInfos } from '../../actions/uscensuslearnActions';\r\n\r\nclass AgeBarChart extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\t\t\r\n\t\tthis.props.fetchInfos()\r\n\t\t\r\n\t}\r\n    render(){\r\n        const {infos} = this.props.infos;\r\n        var malesTotalAge = 0;\r\n        var femalesTotalAge = 0;\r\n        var maleCount = 0;\r\n        var femaleCount = 0;\r\n        var maleMean = 0;\r\n        var femaleMean = 0;\r\n\r\n        for(var i =0; i<infos.length; i++){\r\n            if(infos[i].sex === \"Male\"){\r\n                malesTotalAge+= infos[i].age\r\n                maleCount+= 1;\r\n            }\r\n            else if(infos[i].sex === \"Female\") {\r\n                femalesTotalAge+= infos[i].age;\r\n                femaleCount+= 1;\r\n            }\r\n            else{\r\n                console.log('not include')\r\n            }\r\n        }\r\n\r\n        maleMean = malesTotalAge/maleCount;\r\n        femaleMean = femalesTotalAge/femaleCount;\r\n        var sexData = [['Sex', 'Mean Age'], ['Female', femaleMean], ['Male', maleMean] ]\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"card mt-3\">\r\n                        <div className=\"card-body\"> \r\n                            <Chart\r\n\t\t\t\t\t\t\t\t  height={'100px'}\r\n\t\t\t\t\t\t\t\t  chartType=\"BarChart\"\r\n\t\t\t\t\t\t\t\t  loader={<div>Loading Chart</div>}\r\n\t\t\t\t\t\t\t\t  data={sexData}\r\n\t\t\t\t\t\t\t\t  options={{\r\n\t\t\t\t\t\t\t\t    title: 'NEO Data vizualisation',\r\n\t\t\t\t\t\t\t\t    chartArea: { width: '50%' },\r\n\t\t\t\t\t\t\t\t    hAxis: {\r\n\t\t\t\t\t\t\t\t      title: 'Estimated diameter(km)',\r\n\t\t\t\t\t\t\t\t      minValue: 0,\r\n\t\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t\t    vAxis: {\r\n\t\t\t\t\t\t\t\t      title: 'Neo Name',\r\n\t\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t\t  // For tests\r\n\t\t\t\t\t\t\t\t  rootProps={{ 'data-testid': '2' }}\r\n\t\t\t\t\t\t\t\t/>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}const mapStateToProps = state => ({\r\n    infos : state.infos\r\n})\r\nexport default connect(mapStateToProps,{fetchInfos})(AgeBarChart)"]},"metadata":{},"sourceType":"module"}